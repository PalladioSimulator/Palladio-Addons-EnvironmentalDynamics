//  This is a strategy model for DeltaIoT.

modelName = "DeltaIoTDefaultReconfigurationStrategy";

const int CHANGE_POWER_VALUE = 1;
const double CHANGE_DIST_VALUE = 0.1; 				// original value from Paper: 10.0

// constants to represent links; refers to id of linking resource in *.resourceenvironment
const string link1	= "_-wdssMWJEem8XvI7PKw-OA";	// entityName="Unicast13to11"
const string link2	= "_55XWsMWQEem8XvI7PKw-OA"; 	// entityName="Unicast14to12"	
const string link3	= "_IXND0MWSEem8XvI7PKw-OA"; 	// entityName="Unicast15to12"
const string link4	= "_O51DUMWSEem8XvI7PKw-OA";	// entityName="Unicast11to7"
const string link5	= "_t4JVoMWSEem8XvI7PKw-OA";	// entityName="Unicast12to7"
const string link6	= "_2xD3EMWSEem8XvI7PKw-OA";	// entityName="Unicast12to3"
const string link7	= "_96v2kMWSEem8XvI7PKw-OA";	// entityName="Unicast7to3"
const string link8	= "_FQkNkMWTEem8XvI7PKw-OA";	// entityName="Unicast7to2"
const string link9	= "_MqV3gMWTEem8XvI7PKw-OA";	// entityName="Unicast2to4"
const string link10	= "_RkgrcMWTEem8XvI7PKw-OA";	// entityName="Unicast3to1"
const string link11	= "_Yi0hYMWTEem8XvI7PKw-OA";	// entityName="Unicast8to1"
const string link12	= "_e2HEYMWTEem8XvI7PKw-OA";	// entityName="Unicast4to1"
const string link13	= "_kPLa0MWTEem8XvI7PKw-OA";	// entityName="Unicast9to1"
const string link14	= "_oDy78MWTEem8XvI7PKw-OA";	// entityName="Unicast6to4"
const string link15	= "_sWqfUMWTEem8XvI7PKw-OA";	// entityName="Unicast10to6"
const string link16	= "_0QjzwMWTEem8XvI7PKw-OA";	// entityName="Unicast10to5"
const string link17	= "_9BF1QMWTEem8XvI7PKw-OA";	// entityName="Unicast5to9"


// local variables to store referenceName; additionally required due to PCM metamodel constraints 
// as 2nd key to identify assembly context for link; not part of the original DeltaIoT strategy; 
var string link1_referenceName = "TransmissionPower13to11";
var string link2_referenceName = "TransmissionPower14to12";		// Mote 7
var string link3_referenceName = "TransmissionPower15to12";		// Mote 7, Mote 3
var string link4_referenceName = "TransmissionPower11to7";
var string link5_referenceName = "TransmissionPower12to7";		// Mote 10
var string link6_referenceName = "TransmissionPower12to3";		// Mote 10
var string link7_referenceName = "TransmissionPower7to3";		// Mote 7
var string link8_referenceName = "TransmissionPower7to2";
var string link9_referenceName = "TransmissionPower2to4";
var string link10_referenceName = "TransmissionPower3to1";		
var string link11_referenceName = "TransmissionPower8to1";
var string link12_referenceName = "TransmissionPower4to1";
var string link13_referenceName = "TransmissionPower9to1";
var string link14_referenceName = "TransmissionPower6to4";
var string link15_referenceName = "TransmissionPower10to6";
var string link16_referenceName = "TransmissionPower10to5";
var string link17_referenceName = "TransmissionPower5to9";


// Local variables to store current power settings per link; ; initial values taken from *.reconfigurationparams
var int link1_power = 0;
var int link2_power = 0;		// Mote 7
var int link3_power = 0;		// Mote 7, Mote 3
var int link4_power = 0;
var int link5_power = 0;		// Mote 10
var int link6_power = 0;		// Mote 10
var int link7_power = 0;		// Mote 7
var int link8_power = 0;
var int link9_power = 0;
var int link10_power = 0;		
var int link11_power = 0;
var int link12_power = 0;
var int link13_power = 0;
var int link14_power = 0;
var int link15_power = 0;
var int link16_power = 0;
var int link17_power = 0;


// Local variables to store current distribution settings per link; initial values taken from *.reconfigurationparams
var double link7_dist = 0.4;		
var double link8_dist = 0.6;
var double link15_dist = 0.4;
var double link16_dist = 0.6;
var double link5_dist = 0.6;	
var double link6_dist = 0.4;


// local variables to store probabilisticBranchTransition; additionally required due to PCM metamodel constraints 
// as 2nd key to identify assembly context for link; not part of the original DeltaIoT strategy; 
var string link5_probabilisticBranchTransition = "TransmitToMote7";		// Mote 10
var string link6_probabilisticBranchTransition = "TransmitToMote3";		// Mote 10
var string link7_probabilisticBranchTransition = "TransmitFrom7toMote3";		// Mote 7
var string link8_probabilisticBranchTransition = "TransmitToMote2";
var string link15_probabilisticBranchTransition = "TransmitToMote6";
var string link16_probabilisticBranchTransition = "TransmitToMote5";

// Environment variables 'SNR'
envvar double SRN_6to4Link_SignalToNoiseRatioInstantiation: variableId="_8lRGYEdwEeq4nph5UDtc-g";
envvar double SRN_5to9Link_SignalToNoiseRatioInstantiation: variableId="_8lVX0kdwEeq4nph5UDtc-g";
envvar double SRN_14to12Link_SignalToNoiseRatioInstantiation: variableId="_8lWl8UdwEeq4nph5UDtc-g";
envvar double SRN_7to3Link_SignalToNoiseRatioInstantiation: variableId="_8lXNAEdwEeq4nph5UDtc-g";
envvar double SRN_11to7Link_SignalToNoiseRatioInstantiation: variableId="_8lXNBEdwEeq4nph5UDtc-g";
envvar double SRN_15to12Link_SignalToNoiseRatioInstantiation: variableId="_8lX0FEdwEeq4nph5UDtc-g";
envvar double SRN_12to7Link_SignalToNoiseRatioInstantiation: variableId="_8lYbIEdwEeq4nph5UDtc-g";
envvar double SRN_13to11Link_SignalToNoiseRatioInstantiation: variableId="_8lYbJkdwEeq4nph5UDtc-g";
envvar double SRN_7to2Link_SignalToNoiseRatioInstantiation: variableId="_8lZCM0dwEeq4nph5UDtc-g";
envvar double SRN_10to6Link_SignalToNoiseRatioInstantiation: variableId="_8lZpQ0dwEeq4nph5UDtc-g";
envvar double SRN_9to1Link_SignalToNoiseRatioInstantiation: variableId="_8laQUEdwEeq4nph5UDtc-g";
envvar double SRN_10to5Link_SignalToNoiseRatioInstantiation: variableId="_8la3ZUdwEeq4nph5UDtc-g";
envvar double SRN_4to1Link_SignalToNoiseRatioInstantiation: variableId="_8lbec0dwEeq4nph5UDtc-g";
envvar double SRN_8to1Link_SignalToNoiseRatioInstantiation: variableId="_8lcFgkdwEeq4nph5UDtc-g";
envvar double SRN_12to3Link_SignalToNoiseRatioInstantiation: variableId="_8ldTokdwEeq4nph5UDtc-g";
envvar double SRN_3to1Link_SignalToNoiseRatioInstantiation: variableId="_8ld6sEdwEeq4nph5UDtc-g";
envvar double SRN_2to4Link_SignalToNoiseRatioInstantiation: variableId="_8lfI0EdwEeq4nph5UDtc-g";


// probes: Motes; definition is superfluous as we are only interested in the links


// actions in this case are no QVTO transformations but Model-to-Text Transformations of Prism Input files
action changeLinkPower(param string link, param string referenceName, param int value); // referenceName required as additional parameter compared to original DeltaIoT strategy
action changeLinkDistribution(param string link, param string probabilisticBranchTransition, param double value); 


/** check link conditions */

// check for each link that 'isPowerOptimal': Check whether SNR > 0 and Power == 0 OR SNR < 0 && Power == 15
if (!(SRN_6to4Link_SignalToNoiseRatioInstantiation > 0 && link14_power == 0) || !(SRN_6to4Link_SignalToNoiseRatioInstantiation < 0 && link14_power == 15)) {
	//then plan .....
	// check for each link SNR settings
	if (SRN_6to4Link_SignalToNoiseRatioInstantiation < 0) {
		link14_power = link14_power + CHANGE_POWER_VALUE;
		changeLinkPower(link=link14, referenceName=link14_referenceName, value=link14_power);
	}
	if (SRN_6to4Link_SignalToNoiseRatioInstantiation > 0) {
		link1_power = link14_power - CHANGE_POWER_VALUE;
		changeLinkPower(link=link14, referenceName=link14_referenceName, value=link14_power);
	}
}

if (!(SRN_5to9Link_SignalToNoiseRatioInstantiation > 0 && link17_power == 0) || !(SRN_5to9Link_SignalToNoiseRatioInstantiation < 0 && link17_power == 15)) {	
	if (SRN_5to9Link_SignalToNoiseRatioInstantiation < 0) {
		link17_power = link17_power + CHANGE_POWER_VALUE;
		changeLinkPower(link=link17, referenceName=link17_referenceName, value=link17_power);
	}
	if (SRN_5to9Link_SignalToNoiseRatioInstantiation > 0) {
		link17_power = link17_power - CHANGE_POWER_VALUE;
		changeLinkPower(link=link17, referenceName=link17_referenceName, value=link17_power);
	}
}

if (!(SRN_14to12Link_SignalToNoiseRatioInstantiation > 0 && link2_power == 0) || !(SRN_14to12Link_SignalToNoiseRatioInstantiation < 0 && link2_power == 15)) {
	if (SRN_14to12Link_SignalToNoiseRatioInstantiation < 0) {
		link2_power = link2_power + CHANGE_POWER_VALUE;
		changeLinkPower(link=link2, referenceName=link2_referenceName, value=link2_power);
	}
	if (SRN_14to12Link_SignalToNoiseRatioInstantiation > 0) {
		link2_power = link2_power - CHANGE_POWER_VALUE;
		changeLinkPower(link=link2, referenceName=link2_referenceName, value=link2_power);
	}
}

if (!(SRN_7to3Link_SignalToNoiseRatioInstantiation > 0 && link7_power == 0) || !(SRN_7to3Link_SignalToNoiseRatioInstantiation < 0 && link7_power == 15)) {
	if (SRN_7to3Link_SignalToNoiseRatioInstantiation < 0) {
		link7_power = link7_power + CHANGE_POWER_VALUE;
		changeLinkPower(link=link7, referenceName=link7_referenceName, value=link7_power);
	}
	if (SRN_7to3Link_SignalToNoiseRatioInstantiation > 0) {
		link7_power = link7_power - CHANGE_POWER_VALUE;
		changeLinkPower(link=link7, referenceName=link7_referenceName, value=link7_power);
	}
}

if (!(SRN_11to7Link_SignalToNoiseRatioInstantiation > 0 && link4_power == 0) || !(SRN_11to7Link_SignalToNoiseRatioInstantiation < 0 && link4_power == 15)) {
	if (SRN_11to7Link_SignalToNoiseRatioInstantiation < 0) {
		link4_power = link4_power + CHANGE_POWER_VALUE;
		changeLinkPower(link=link4, referenceName=link4_referenceName, value=link4_power);
	}
	if (SRN_11to7Link_SignalToNoiseRatioInstantiation > 0) {
		link4_power = link4_power - CHANGE_POWER_VALUE;
		changeLinkPower(link=link4, referenceName=link4_referenceName, value=link4_power);
	}
}

if (!(SRN_15to12Link_SignalToNoiseRatioInstantiation > 0 && link3_power == 0) || !(SRN_15to12Link_SignalToNoiseRatioInstantiation < 0 && link3_power == 15)) {	
	if (SRN_15to12Link_SignalToNoiseRatioInstantiation < 0) {
		link3_power = link3_power + CHANGE_POWER_VALUE;
		changeLinkPower(link=link3, referenceName=link3_referenceName, value=link3_power);
	}
	if (SRN_15to12Link_SignalToNoiseRatioInstantiation > 0) {
		link3_power = link3_power - CHANGE_POWER_VALUE;
		changeLinkPower(link=link3, referenceName=link3_referenceName, value=link3_power);
	}
}

if (!(SRN_12to7Link_SignalToNoiseRatioInstantiation > 0 && link5_power == 0) || !(SRN_12to7Link_SignalToNoiseRatioInstantiation < 0 && link5_power == 15)) {
	if (SRN_12to7Link_SignalToNoiseRatioInstantiation < 0) {
		link5_power = link5_power + CHANGE_POWER_VALUE;
		changeLinkPower(link=link5, referenceName=link5_referenceName, value=link5_power);
	}
	if (SRN_12to7Link_SignalToNoiseRatioInstantiation > 0) {
		link5_power = link5_power - CHANGE_POWER_VALUE;
		changeLinkPower(link=link5, referenceName=link5_referenceName, value=link5_power);
	}
}

if (!(SRN_13to11Link_SignalToNoiseRatioInstantiation > 0 && link1_power == 0) || !(SRN_13to11Link_SignalToNoiseRatioInstantiation < 0 && link1_power == 15)) {
	if (SRN_13to11Link_SignalToNoiseRatioInstantiation < 0) {
		link1_power = link1_power + CHANGE_POWER_VALUE;
		changeLinkPower(link=link1, referenceName=link1_referenceName, value=link1_power);
	}
	if (SRN_13to11Link_SignalToNoiseRatioInstantiation > 0) {
		link1_power = link1_power - CHANGE_POWER_VALUE;
		changeLinkPower(link=link1, referenceName=link1_referenceName, value=link1_power);
	}
}

if (!(SRN_7to2Link_SignalToNoiseRatioInstantiation > 0 && link8_power == 0) || !(SRN_7to2Link_SignalToNoiseRatioInstantiation < 0 && link8_power == 15)) {
	if (SRN_7to2Link_SignalToNoiseRatioInstantiation < 0) {
		link8_power = link8_power + CHANGE_POWER_VALUE;
		changeLinkPower(link=link8, referenceName=link8_referenceName, value=link8_power);
	}
	if (SRN_7to2Link_SignalToNoiseRatioInstantiation > 0) {
		link8_power = link8_power - CHANGE_POWER_VALUE;
		changeLinkPower(link=link8, referenceName=link8_referenceName, value=link8_power);
	}
}

if (!(SRN_10to6Link_SignalToNoiseRatioInstantiation > 0 && link15_power == 0) || !(SRN_10to6Link_SignalToNoiseRatioInstantiation < 0 && link15_power == 15)) {
	if (SRN_10to6Link_SignalToNoiseRatioInstantiation < 0) {
		link15_power = link15_power + CHANGE_POWER_VALUE;
		changeLinkPower(link=link15, referenceName=link15_referenceName, value=link15_power);
	}
	if (SRN_10to6Link_SignalToNoiseRatioInstantiation > 0) {
		link15_power = link15_power - CHANGE_POWER_VALUE;
		changeLinkPower(link=link15, referenceName=link15_referenceName, value=link15_power);
	}
}

if (!(SRN_9to1Link_SignalToNoiseRatioInstantiation > 0 && link13_power == 0) || !(SRN_9to1Link_SignalToNoiseRatioInstantiation < 0 && link13_power == 15)) {
	if (SRN_9to1Link_SignalToNoiseRatioInstantiation < 0) {
		link13_power = link13_power + CHANGE_POWER_VALUE;
		changeLinkPower(link=link13, referenceName=link13_referenceName, value=link13_power);
	}
	if (SRN_9to1Link_SignalToNoiseRatioInstantiation > 0) {
		link13_power = link13_power - CHANGE_POWER_VALUE;
		changeLinkPower(link=link13, referenceName=link13_referenceName, value=link13_power);
	}
}

if (!(SRN_10to5Link_SignalToNoiseRatioInstantiation > 0 && link16_power == 0) || !(SRN_10to5Link_SignalToNoiseRatioInstantiation < 0 && link16_power == 15)) {
	if (SRN_10to5Link_SignalToNoiseRatioInstantiation < 0) {
		link16_power = link16_power + CHANGE_POWER_VALUE;
		changeLinkPower(link=link16, referenceName=link16_referenceName, value=link16_power);
	}
	if (SRN_10to5Link_SignalToNoiseRatioInstantiation > 0) {
		link16_power = link16_power - CHANGE_POWER_VALUE;
		changeLinkPower(link=link16, referenceName=link16_referenceName, value=link16_power);
	}
}

if (!(SRN_4to1Link_SignalToNoiseRatioInstantiation > 0 && link12_power == 0) || !(SRN_4to1Link_SignalToNoiseRatioInstantiation < 0 && link12_power == 15)) {
	if (SRN_4to1Link_SignalToNoiseRatioInstantiation < 0) {
		link12_power = link12_power + CHANGE_POWER_VALUE;
		changeLinkPower(link=link12, referenceName=link12_referenceName, value=link12_power);
	}
	if (SRN_4to1Link_SignalToNoiseRatioInstantiation > 0) {
		link12_power = link12_power - CHANGE_POWER_VALUE;
		changeLinkPower(link=link12, referenceName=link12_referenceName, value=link12_power);
	}
}

if (!(SRN_8to1Link_SignalToNoiseRatioInstantiation > 0 && link11_power == 0) || !(SRN_8to1Link_SignalToNoiseRatioInstantiation < 0 && link11_power == 15)) {
	if (SRN_8to1Link_SignalToNoiseRatioInstantiation < 0) {
		link11_power = link11_power + CHANGE_POWER_VALUE;
		changeLinkPower(link=link11, referenceName=link11_referenceName, value=link11_power);
	}
	if (SRN_8to1Link_SignalToNoiseRatioInstantiation > 0) {
		link11_power = link11_power - CHANGE_POWER_VALUE;
		changeLinkPower(link=link11, referenceName=link11_referenceName, value=link11_power);
	}
}

if (!(SRN_12to3Link_SignalToNoiseRatioInstantiation > 0 && link6_power == 0) || !(SRN_12to3Link_SignalToNoiseRatioInstantiation < 0 && link6_power == 15)) {
	if (SRN_12to3Link_SignalToNoiseRatioInstantiation < 0) {
		link6_power = link6_power + CHANGE_POWER_VALUE;
		changeLinkPower(link=link6, referenceName=link6_referenceName, value=link6_power);
	}
	if (SRN_12to3Link_SignalToNoiseRatioInstantiation > 0) {
		link6_power = link6_power - CHANGE_POWER_VALUE;
		changeLinkPower(link=link6, referenceName=link6_referenceName, value=link6_power);
	}
}

if (!(SRN_3to1Link_SignalToNoiseRatioInstantiation > 0 && link10_power == 0) || !(SRN_3to1Link_SignalToNoiseRatioInstantiation < 0 && link10_power == 15)) {
	if (SRN_3to1Link_SignalToNoiseRatioInstantiation < 0) {
		link10_power = link10_power + CHANGE_POWER_VALUE;
		changeLinkPower(link=link10, referenceName=link10_referenceName, value=link10_power);
	}
	if (SRN_3to1Link_SignalToNoiseRatioInstantiation > 0) {
		link10_power = link10_power - CHANGE_POWER_VALUE;
		changeLinkPower(link=link10, referenceName=link10_referenceName, value=link10_power);
	}
}

if (!(SRN_2to4Link_SignalToNoiseRatioInstantiation > 0 && link9_power == 0) || !(SRN_2to4Link_SignalToNoiseRatioInstantiation < 0 && link9_power == 15)) {
	if (SRN_2to4Link_SignalToNoiseRatioInstantiation < 0) {
		link9_power = link9_power + CHANGE_POWER_VALUE;
		changeLinkPower(link=link9, referenceName=link9_referenceName, value=link9_power);
	}
	if (SRN_2to4Link_SignalToNoiseRatioInstantiation > 0) {
		link9_power = link9_power - CHANGE_POWER_VALUE;
		changeLinkPower(link=link9, referenceName=link9_referenceName, value=link9_power);
	}
}	
	

// check that 'allLinkUseSamePower' for Motes with 2 outgoing links
// Mote 7: link7, link8
if(!(link7_power == link8_power)){
	if(link7_power > link8_power){
		link7_dist = link7_dist - CHANGE_DIST_VALUE;
		changeLinkDistribution(link=link7, probabilisticBranchTransition=link7_probabilisticBranchTransition, value=link7_dist);
		link8_dist = link8_dist + CHANGE_DIST_VALUE;
		changeLinkDistribution(link=link8, probabilisticBranchTransition=link8_probabilisticBranchTransition, value=link8_dist);
	} else {
		link7_dist = link7_dist + CHANGE_DIST_VALUE;
		changeLinkDistribution(link=link7, probabilisticBranchTransition=link7_probabilisticBranchTransition, value=link7_dist);
		link8_dist = link8_dist - CHANGE_DIST_VALUE;
		changeLinkDistribution(link=link8, probabilisticBranchTransition=link8_probabilisticBranchTransition, value=link8_dist);
	}
}
// Mote 10: link15, link16
if(!(link15_power == link16_power)){
	if(link15_power > link16_power){
		link15_dist = link15_dist - CHANGE_DIST_VALUE;
		changeLinkDistribution(link=link15, probabilisticBranchTransition=link15_probabilisticBranchTransition, value=link15_dist);
		link16_dist = link16_dist + CHANGE_DIST_VALUE;
		changeLinkDistribution(link=link16, probabilisticBranchTransition=link16_probabilisticBranchTransition, value=link16_dist);
	} else {
		link15_dist = link15_dist + CHANGE_DIST_VALUE;
		changeLinkDistribution(link=link15, probabilisticBranchTransition=link15_probabilisticBranchTransition, value=link15_dist);
		link16_dist = link16_dist - CHANGE_DIST_VALUE;
		changeLinkDistribution(link=link16, probabilisticBranchTransition=link16_probabilisticBranchTransition, value=link16_dist);
	}
}
// Mote12: link5, link6
if(!(link5_power == link6_power)){
	if(link5_power > link6_power){
		link5_dist = link5_dist - CHANGE_DIST_VALUE;
		changeLinkDistribution(link=link5, probabilisticBranchTransition=link5_probabilisticBranchTransition, value=link5_dist);
		link6_dist = link6_dist + CHANGE_DIST_VALUE;
		changeLinkDistribution(link=link6, probabilisticBranchTransition=link6_probabilisticBranchTransition, value=link6_dist);
	} else {
		link5_dist = link5_dist + CHANGE_DIST_VALUE;
		changeLinkDistribution(link=link5, probabilisticBranchTransition=link5_probabilisticBranchTransition, value=link5_dist);
		link6_dist = link6_dist - CHANGE_DIST_VALUE;
		changeLinkDistribution(link=link6, probabilisticBranchTransition=link6_probabilisticBranchTransition, value=link6_dist);
	}
}
