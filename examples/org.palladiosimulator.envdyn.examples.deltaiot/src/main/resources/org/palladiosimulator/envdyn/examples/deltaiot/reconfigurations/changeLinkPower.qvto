// declaration: externally defined metamodels
modeltype PCM_CORE uses 'http://palladiosimulator.org/PalladioComponentModel/Core/5.2';
modeltype PCM_CORE_COMP uses 'http://palladiosimulator.org/PalladioComponentModel/Core/Composition/5.2';
modeltype PCM_ALLOC uses 'http://palladiosimulator.org/PalladioComponentModel/Allocation/5.2';
modeltype PCM_SYS uses 'http://palladiosimulator.org/PalladioComponentModel/System/5.2';
modeltype PCM_PARAM uses 'http://palladiosimulator.org/PalladioComponentModel/Parameter/5.2';


transformation  changeLinkPower(inout pcmSystem : PCM_SYS) {

	// action parameters passed to qvto transformation to update PCM model
	configuration property assemblyConnector : String;			// assemblyConnector id
	configuration property referenceName : String;				// variable referenceName
	configuration property value : Integer;						// power value

	main() {
		log('*** STARTED: Transformation rule [changeLinkPower] ...');
		adjustPowerSettings();
		log('*** DONE: Transformation rule [changeLinkPower]');	
	}
	
	helper adjustPowerSettings() {
		var assemblyCtx : AssemblyContext = findAssemblyContextForAssemblyConnector(assemblyConnector, referenceName);
		assert fatal(assemblyCtx != null) with log('No AssemblyContext found with for assemblyConnector/referenceName: ' + assemblyConnector + '/' + referenceName);
		
		var variableUsage : VariableUsage := assemblyCtx.configParameterUsages__AssemblyContext->any(namedReference__VariableUsage.referenceName = referenceName);
		assert fatal(variableUsage != null) with log('No VariableUsage found with reference name: ' + referenceName);
		
		var variableToAdjust : PCMRandomVariable := variableUsage.variableCharacterisation_VariableUsage->asSequence()->first().specification_VariableCharacterisation;
		assert fatal(variableToAdjust != null) with log('No PCMRandomVariable found for assemblyConnector/referenceName: ' + assemblyConnector + '/' + referenceName);
		
		log('[changeLinkPower: set assemblyConnector/referenceName=' + assemblyConnector + '/' + referenceName + ' to value:' + value.toString() + ']');
		variableToAdjust.specification := value.toString();
	}
	
	query findAssemblyContextForAssemblyConnector(in assemblyConnector : String, in referenceName : String ) : AssemblyContext {
		log('[findAssemblyContextForAssemblyConnector: search assemblyConnector/referenceName: ' + assemblyConnector +'/' + referenceName + ']');
		var assemblyConnectors : Bag(AssemblyConnector) = pcmSystem.rootObjects()[System].allSubobjects()[AssemblyConnector];
		assemblyConnectors->forEach(connector) {
//			log('[findAssemblyContextForAssemblyConnector: check assemblyConnector/assemblyConnector: ' + connector.id +'/'+ assemblyConnector + ']');
			if (connector.id = assemblyConnector) then {
				var assemblyCtx : AssemblyContext = connector.requiringAssemblyContext_AssemblyConnector;
				log('Found AssemblyContext[' + assemblyCtx.entityName +', ' + assemblyCtx.id +']');
				return assemblyCtx;
			}endif;
		};
		return null;
	}

}
